# This file was auto-generated, do not edit it directly.
# Instead run bin/update_build_scripts from
# https://github.com/das7pad/sharelatex-dev-env

version: "3.1"

services:
  test_unit:
    image: node:12.16.2
    volumes:
      - .:/app
    working_dir: /app
    environment:
      MOCHA_GREP: ${MOCHA_GREP}
    command: npm run test:unit
    user: node

  test_acceptance:
    image: node:12.16.2
    volumes:
      - .:/app
    working_dir: /app
    environment:
      LOG_LEVEL: fatal
      MONGO_HOST: mongo
      DOC_UPDATER_REDIS_HOST: redis_documentupdater
      LOCK_REDIS_HOST: redis_lock
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      AWS_S3_PATH_STYLE: ${AWS_S3_PATH_STYLE}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET: ${AWS_BUCKET}
      MOCHA_GREP: ${MOCHA_GREP}
    user: node
    depends_on:
      - minio
      - minio_setup
      - mongo
      - redis_documentupdater
      - redis_lock
    command: npm run test:acceptance

  minio:
    image: minio/minio
    tmpfs: /data
    command: server /data
    environment:
      MINIO_BROWSER: 'off'
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}

  minio_setup:
    image: minio/mc
    entrypoint: sh
    command:
      - -c
      - >
        sleep 2
        && mc config host add minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}
        && mc mb --ignore-existing minio/${AWS_BUCKET}
    depends_on:
      - minio

  mongo:
    image: mongo
    tmpfs: /data

  redis_documentupdater:
    image: redis
    tmpfs: /data

  redis_lock:
    image: redis
    tmpfs: /data
